import{l as E,a as L,b as O,c as k,d as G,e as N,f as W,G as i}from"./npc-model-DG3q-mtQ.js";import"./solid-lwVvZ318.js";const x=()=>{const s="darkEarth-1.0.44-save",l="darkEarth-1.0.44-log",c="darkEarth-1.0.44-auto-save",g="darkEarth-1.0.44-auto-log",v=()=>{console.debug("Clearing saved game...");try{const e=localStorage.getItem(l),a=localStorage.getItem(s);e&&localStorage.setItem(`${l}-backup`,e),a&&localStorage.setItem(`${s}-backup`,a)}catch{console.debug("Unable to backup saved game")}try{localStorage.removeItem(s),localStorage.removeItem(l),localStorage.removeItem(c),localStorage.removeItem(g),console.debug("Saved game cleared successfully.")}catch(e){console.error("Error clearing saved game:",e)}},f=(e=!1)=>{console.debug("Saving game log...");const a=i().log,o=JSON.stringify(a);try{localStorage.setItem(e?g:l,o)}catch(r){console.error("Error saving game log:",r)}},S=(e,a=!1)=>{console.debug("Saving game...");const{playerModel:o,npcModels:r,eventModels:n,settlementModels:d,tileModels:m,fogOfWarViewModel:u}=e,I=JSON.stringify({playerData:o.data(),npcData:r.map(t=>t.data()),eventData:n.map(t=>t.data()),settlementData:d.map(t=>t.data()),tileData:m.map(t=>t.map(h=>h.data())),fogOfWarData:u.data()});try{localStorage.setItem(a?c:s,I)}catch(t){console.error("Error saving game state:",t);return}f(),console.debug("Game saved successfully.")},p=(e=!1)=>{console.debug("Loading game log...");const a=localStorage.getItem(e?g:l);if(!a){console.warn("No saved game log found.");return}try{const o=JSON.parse(a);i().load(o),console.debug("Game log loaded successfully.")}catch(o){console.error("Error loading game log:",o)}},M=()=>(console.debug("Checking if saved game exists..."),localStorage.getItem(s)?(console.debug("Saved game found."),!0):(console.debug("No saved game found."),!1)),b=()=>(console.debug("Checking if auto-saved game exists..."),localStorage.getItem(c)?(console.debug("Auto-saved game found."),!0):(console.debug("No auto-saved game found."),!1)),y=(e=!1)=>{console.debug("Loading game...");const a=localStorage.getItem(e?c:s);if(!a){console.warn("No saved game state found.");return}try{const o=JSON.parse(a),r=D(o);return console.debug("Game loaded successfully."),p(),r}catch(o){console.error("Error loading game state:",o);return}},D=e=>{const a=E(e.playerData),o=e.npcData.map(L),r=e.eventData.map(O),n=e.settlementData.map(k),d=e.tileData.map(u=>u.map(G)),m=N(e.fogOfWarData);return{playerModel:a,npcModels:o,eventModels:r,settlementModels:n,tileMapModel:W(d),fogOfWarViewModel:m}};return{save:S,load:y,clear:v,saveExists:M,autoSaveExists:b}};export{x as createSaveController};
