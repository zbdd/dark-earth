import{c as r}from"./solid-lwVvZ318.js";import{a as _}from"./index-DP1GvXT9.js";const z=e=>{const{code:o,id:t,armour:n,health:m,collected:s,uses:c}=e,i=B.find(h=>h.code()===o);if(!i)throw Error(`Item with code ${o} not found in available items.`);return E({code:i.code(),name:i.name(),randomDropWeight:i.randomDropWeight(),description:i.description(),value:i.value(),quantity:1,level:i.level(),health:m??i.health(),type:i.type(),damage:i.damage(),range:i.range(),armour:n??i.armour(),maxArmour:i.maxArmour(),id:t,collected:s,uses:c})},E=({code:e,name:o,randomDropWeight:t=50,description:n="No description provided",value:m=1,id:s,collected:c=!1,quantity:i=1,uses:h=0,level:d=1,health:p=0,type:v="loot",damage:y=0,range:I=0,armour:D=0,maxArmour:g})=>{const u=s??Math.random().toString(36).substring(2,15)+"-"+e,l=B.find(f=>f.code()===e),[W,A]=r(i),[b,k]=r(D??(l==null?void 0:l.armour())),[C,M]=r(h),[w,V]=r(c),[q]=r((l==null?void 0:l.type())??v),[U]=r(p??(l==null?void 0:l.health())),[P]=r((l==null?void 0:l.damage())??y),[T]=r((l==null?void 0:l.range())??I),[H]=r((l==null?void 0:l.value())??m),[O]=r((l==null?void 0:l.description())??n),[L]=r((l==null?void 0:l.level())??d),[x]=r((l==null?void 0:l.maxArmour())??g??b()),[R]=r((l==null?void 0:l.randomDropWeight())!==void 0?l.randomDropWeight():t);return{code:()=>e,id:()=>u,description:()=>O(),randomDropWeight:()=>R(),name:()=>o,level:()=>L(),collected:()=>w(),setCollected:f=>{V(f)},quantity:()=>W(),value:()=>H(),updateQuantity:f=>{A(f)},uses:()=>C(),setUses:f=>{f>=0&&M(f)},health:()=>U(),type:()=>q(),damage:()=>P(),range:()=>T(),armour:()=>b(),setArmour:f=>{f>=0&&k(f)},maxArmour:()=>x(),data:()=>({code:e,name:o,randomDropWeight:R(),description:O(),value:H(),quantity:W(),level:L(),health:U(),type:q(),damage:P(),range:T(),armour:b(),id:u,maxArmour:x(),uses:C(),collected:w()})}},ee=[{code:"boots",name:"Boots",level:2,randomDropWeight:18,description:"Basic footwear providing limited protection.",value:1,armour:1,type:"shoes"},{code:"steel-toe-boots",name:"Steel-Toe Boots",level:3,randomDropWeight:7,description:"Heavy-duty boots with reinforced toes. Ideal for kicking and surviving.",value:2,armour:2,type:"shoes"},{code:"leather-sneakers",name:"Leather Sneakers",level:1,randomDropWeight:35,description:"Worn down but flexible. Better than walking barefoot.",value:1,type:"shoes"},{code:"military-greaves",name:"Military Greaves",level:4,randomDropWeight:3,description:"Surplus-grade lower leg armour. Scarred, but solid.",value:4,armour:3,type:"shoes"},{code:"plated-shinwraps",name:"Plated Shinwraps",level:2,randomDropWeight:10,description:"Wrapped in cloth and bolted with scrap metal plates.",value:2,armour:1,type:"shoes"},{code:"cultist-footwraps",name:"Cultist Footwraps",level:1,randomDropWeight:25,description:"Bandages soaked in oil and prayer. Not hygienic.",value:1,type:"shoes"},{code:"hazmat-boots",name:"Hazmat Boots",level:3,randomDropWeight:6,description:"Rubberised boots with cracked soles. Resistant to gunk, not teeth.",value:2,armour:1,type:"shoes"},{code:"soggy-slippers",name:"Soggy Slippers",level:0,randomDropWeight:45,description:"Wet, floppy, and morally offensive. Someone still wore these.",value:1,type:"shoes"},{code:"tire-tread-sandals",name:"Tire-Tread Sandals",level:2,randomDropWeight:12,description:"Crafted from old tires and wire. Surprisingly durable.",value:1,armour:1,type:"shoes"},{code:"reinforced-waders",name:"Reinforced Waders",level:3,randomDropWeight:5,description:"Heavy waterproof boots reinforced with rivets and curses.",value:2,armour:2,type:"shoes"},{code:"ceremonial-toe-rings",name:"Ceremonial Toe Rings",level:0,randomDropWeight:30,description:"Technically footwear. Spiritually disappointing.",value:1,type:"shoes"},{code:"leather-tunic",name:"Leather Tunic",level:4,randomDropWeight:6,description:"A tunic made of leather, providing basic protection.",value:2,armour:1,type:"armour"},{code:"rusted-helm",name:"Rusted Helm",level:2,randomDropWeight:12,description:"A dented steel helmet from a bygone war. Still offers some protection.",value:1,armour:1,type:"helmet"},{code:"riot-visor",name:"Cracked Riot Visor",level:3,randomDropWeight:4,description:"Half of a riot helmet. The visor is shattered but still provides some defense.",value:2,armour:2,type:"helmet"},{code:"makeshift-helmet",name:"Makeshift Helmet",level:2,randomDropWeight:18,description:"A cooking pot with leather straps. Better than nothing, barely.",value:1,armour:1,type:"helmet"},{code:"military-helmet",name:"Old Military Helmet",level:4,randomDropWeight:2,description:"Kevlar-lined and surprisingly intact. Offers solid protection.",value:4,armour:3,type:"helmet"},{code:"metal-faceplate",name:"Metal Faceplate",level:3,randomDropWeight:5,description:"Welded scrap formed into a crude faceguard. Heavy but effective.",value:2,armour:2,type:"helmet"},{code:"bucket-head",name:"Bucket Head",level:1,randomDropWeight:30,description:"It’s literally just a bucket. Slightly muffles voices and incoming rocks.",value:1,armour:1,type:"helmet"}],te=[{code:"torch",name:"Torch",level:1,randomDropWeight:70,description:"A source of light.",value:.1,type:"light"},{code:"scrap",name:"Scrap",level:0,randomDropWeight:100,description:"A piece of scrap metal. Useful for crafting.",value:.1,type:"loot"},{code:"coin",name:"Coin",level:1,randomDropWeight:25,description:"Used to purchase items.",value:1,type:"currency"},{code:"ichor",name:"Ichor",level:8,randomDropWeight:2,description:"A valuable substance used by apothecaries.",value:4},{code:"seedling",name:"Seedling",level:7,randomDropWeight:3,description:"Extremely valuable essence of new life.",value:6},{code:"antigen",name:"Antigen",level:5,randomDropWeight:7,description:"A substance that stimulates the production of antibodies.",value:2},{code:"light-shard",name:"Light Shard",level:10,randomDropWeight:1,description:"A shard of pure light.",value:25},{code:"shirt",name:"Shirt",level:3,randomDropWeight:18,description:"A basic shirt.",value:1,type:"armour"},{code:"scavenger-hood",name:"Scavenger Hood",level:1,randomDropWeight:30,description:"A makeshift hood sewn from scraps and duct tape. Blocks sunlight, not bullets.",value:1,type:"helmet"},{code:"cult-mask",name:"Bone Cult Mask",level:2,randomDropWeight:7,description:"A decorative skull mask worn by wasteland cultists. Intimidating, not useful.",value:1,type:"helmet"},{code:"bandana",name:"Worn Bandana",level:0,randomDropWeight:40,description:"Faded and threadbare. A nod to fashion, not function.",value:1,type:"helmet"},{code:"hazmat-hood",name:"Hazmat Hood (Torn)",level:3,randomDropWeight:5,description:"A scorched hood from an old hazmat suit. Still filters some toxins.",value:2,type:"helmet"}],oe=[{code:"spear",name:"Spear",level:3,randomDropWeight:40,description:"A long weapon for thrusting.",value:2,type:"weapon",damage:1,range:2},{code:"knuckle-duster",name:"Knuckle Duster",level:3,randomDropWeight:40,description:"A metal knuckle for close combat.",value:2,type:"weapon",damage:2,range:1},{code:"sword",name:"Sword",level:5,randomDropWeight:30,description:"A sharp blade for slashing.",value:6,type:"weapon",damage:3,range:1},{code:"knife",name:"Knife",level:2,randomDropWeight:50,description:"A sharp blade for cutting.",value:1,type:"weapon",damage:2,range:1},{code:"bow",name:"Bow",level:4,randomDropWeight:35,description:"A good ranged weapon.",value:3,type:"weapon",damage:2,range:3}],ae=[{code:"healing-potion",name:"Healing Potion",level:3,randomDropWeight:10,description:"A potion that restores health.",value:2,health:3,type:"consumable"},{code:"city-key",name:"City Key",type:"key",level:0,randomDropWeight:0,description:"A key that unlocks the city gates.",value:0},{code:"waterskin",name:"Waterskin",level:2,randomDropWeight:15,description:"Contains precious water.",value:1,health:1,type:"consumable"}],re=[{code:"fists",name:"Fists",quantity:1,level:0,randomDropWeight:0,description:"Your trusty haymakers.",type:"weapon",damage:1,range:1,value:0},{code:"torso",name:"Torso",quantity:1,level:0,randomDropWeight:0,description:"Your body, it's not much, but it’s all you have.",type:"armour",value:0,armour:0},{code:"head",name:"Head",quantity:1,level:0,randomDropWeight:0,description:"Your head, where all the thinking happens.",type:"helmet",value:0,armour:0},{code:"feet",name:"Feet",quantity:1,level:0,randomDropWeight:0,description:"Your feet, they carry you through life.",type:"shoes",value:0,armour:0}],B=[],ne=re.map(e=>E(e)),se=te.map(e=>E(e)),ie=ee.map(e=>E(e)),le=oe.map(e=>E(e)),de=ae.map(e=>E(e));B.push(...ne,...se,...ie,...le,...de);const K=e=>E({code:e.code(),name:e.name(),quantity:1,level:e.level(),randomDropWeight:e.randomDropWeight(),description:e.description(),value:e.value(),health:e.health(),type:e.type(),damage:e.damage(),range:e.range(),armour:e.armour(),maxArmour:e.maxArmour(),id:void 0}),ye=(e,o=1)=>{const t=B.find(n=>n.code()===e);if(!t)throw new Error(`Item with id ${e} not found`);return Array.from({length:o},()=>K(t))},S=(e,o)=>{const t=B.find(n=>n.code()===e);if(!t)throw new Error(`Item with id ${e} not found`);return K({...t,...o})},ce=(e,o)=>{const t=B.filter(n=>n.level()<=e&&n.level()>0);return Array.from({length:o},()=>{const n=t[Math.floor(Math.random()*t.length)];return K(n)})},F=e=>{const[o,t]=r(e),[n,m]=r(e.length===0);return{items:()=>o(),isEmpty:()=>n(),addItem:s=>{t(c=>[...c,s]),m(!1)},removeItem:s=>{const c=o().findIndex(i=>i.id()===s.id());t(i=>(c!==-1&&i.splice(c,1),i.length===0&&m(!0),i))},getItemById:s=>o().find(c=>c.id()===s),getItemByName:s=>o().find(c=>c.name()===s),getItemByCode:s=>o().find(c=>c.code()===s),isOnlyLoot:()=>o().every(s=>["loot","currency","light"].includes(s.type())),data:()=>o().map(s=>{const{code:c,id:i,armour:h,health:d,collected:p,uses:v}=s.data();return{code:c,id:i,armour:h,health:d,collected:p,uses:v}})}},J=e=>{const o=Math.floor(Math.random()*e)+1,t=[];for(let n=0;n<o;n++){if(Math.random()<.5)continue;const m=me();t.push(m)}if(t.length===0){const n=S("coin");t.push(n)}return t},me=()=>{let e=0;const o=[];return B.map(t=>{const n=new Array(t.randomDropWeight()).fill(t);o.push(...n),e+=t.randomDropWeight()}),S(o[Math.floor(Math.random()*e)].code())},ue=e=>{var n,m,s,c,i,h,d;const o=((n=e.startingItems)==null?void 0:n.map(p=>z(p)))||[],t=p=>{if(p)return o.find(v=>v.id()===p)};return X({...e,startingItems:o,dialogues:e.dialogues||["Go away. I'm busy."],startingHealth:e.startingHealth,startingArmour:{body:t((s=(m=e.startingArmour)==null?void 0:m.body)==null?void 0:s.id),head:t((i=(c=e.startingArmour)==null?void 0:c.head)==null?void 0:i.id),feet:t((d=(h=e.startingArmour)==null?void 0:h.feet)==null?void 0:d.id)},startingWeapon:e.startingWeapon?z(e.startingWeapon):void 0})},X=({id:e,name:o,team:t,startingSize:n=1,startPosition:m={x:0,y:0},startingItems:s=[],dialogues:c=["Go away. I'm busy."],startingHealth:i=5,startingMaxHealth:h=i,startingArmour:d={},startingWeapon:p=void 0})=>{const v=S("fists"),y=S("torso"),I=S("head"),D=S("feet"),g=o!=="Hero"&&i>0?s.filter(a=>a.code()!=="city-key"):s,[u,l]=r(m),[W,A]=r(i),[b]=r(F(g)),[k,C]=r(h),[M]=r(c),[w,V]=r("Go away. I'm busy."),[q,U]=r(!0),[P,T]=r(p??v),[H,O]=r(d.body??y),[L,x]=r(d.head??I),[R,f]=r(d.feet??D),[Y]=r(n<1?1:n),Z=()=>{const a=b().getItemByCode("city-key");b().items().forEach(b().removeItem),a&&b().addItem(a),J(Math.floor(Math.random()*3)+1).forEach(b().addItem)},G=a=>a?{code:a.code,id:a.id,armour:a.armour,health:a.health,collected:a.collected,uses:a.uses}:void 0,Q={id:()=>e,name:()=>o,team:()=>t,dialogue:()=>{const a=Math.floor(Math.random()*M().length);return V(M()[a]),w()},setDialogue:a=>V(a),updateTeam:a=>{a!==t&&(t=a)},isHostile:a=>t==="hostile-to-all"||t==="hostile-to-neutral"&&a!=="neutral"?!0:t==="hostile-to-player"&&a==="player",position:()=>({x:u().x,y:u().y,distanceTo:a=>{const N=a.x-u().x,$=a.y-u().y;return Math.sqrt(N*N+$*$)}}),inventory:()=>b(),moveTo:(a,N)=>{Q.id()==="player"&&(_().log.stepsTaken+=1),l({x:a,y:N})},health:()=>W(),setHealth:a=>{a<0?a=0:a>k()&&(a=k()),a<=0&&Z(),A(a)},maxHealth:()=>k(),visible:()=>q(),setVisible:a=>{U(a)},setMaxHealth:a=>{a<0&&(a=0),C(a),A(a)},bodyArmour:()=>H(),setBodyArmour:a=>{O(a||y)},headArmour:()=>L(),setHeadArmour:a=>{x(a||I)},feetArmour:()=>R(),setFeetArmour:a=>{f(a||D)},weapon:()=>P(),setWeapon:a=>{T(a||v)},size:()=>Y(),data:()=>({id:e,name:o,team:t,startPosition:u(),startingItems:b().items().map(a=>a.data()),dialogues:M(),startingHealth:W(),startingArmour:{body:G(H()?H().data():void 0),head:G(L()?L().data():void 0),feet:G(R()?R().data():void 0)},startingWeapon:G(P()?P().data():void 0),startingMaxHealth:k(),startingSize:Y()})};return l(m),Q},fe=e=>{var t;const o=((t=e.startingItems)==null?void 0:t.map(n=>z(n)))||[];return he({...e,startingItems:o})},he=e=>{const{id:o,name:t,startPosition:n,startingItems:m=[],level:s}=e,[c]=r({x:n.x,y:n.y}),[i,h]=r(e.discovered??!1),[d]=r(F(i()?m:[])),[p,v]=r(!0);return{id:()=>o,name:()=>t,level:()=>s,inventory:()=>d(),position:c,discovered:()=>i(),interact:()=>{i()||(h(!0),J(s).forEach(y=>{d().addItem(y)}),_().log.eventsLooted+=1)},visible:()=>p(),setVisible:y=>{v(y)},data:()=>({id:o,name:t,level:s,discovered:i(),startPosition:{x:c().x,y:c().y},startingItems:i()?d().data():[]})}},j=e=>{if(!e)return F([S("city-key")]);const o=5,t=new Array(o).fill(null).map((n,m)=>ce(o-m,m+1)).flat();return F(t)},be=e=>{const o=e.startingItems.map(t=>z(t));return pe({...e,startingItems:o.length>0?o:void 0})},pe=e=>{const{id:o,name:t,level:n,positions:m}=e,[s,c]=r(e.isUnlocked??!1),[i,h]=r(e.startingItems?F(e.startingItems):j(s()));return{id:()=>o,name:()=>t,level:()=>n,positions:()=>m,isUnlocked:()=>s(),setIsUnlocked:d=>{d&&!s()&&h(j(!0)),c(d)},inventory:()=>i(),setInventory:d=>h(d),data:()=>({id:o,name:t,level:n,positions:m.map(d=>({x:d.x,y:d.y})),isUnlocked:s(),startingItems:i().items().map(d=>d.data())})}},We=e=>{const[o,t]=r(0),[n,m]=r(0),[s,c]=r([]),[i,h]=r([]),d=g=>{const u=i();u.includes(g)||(u.push(g),h([...u]))},p=g=>{const u=i(),l=u.indexOf(g);l!==-1&&(u.splice(l,1),h([...u]))},v=(g,u,l)=>{const W=s();W[g][u]=l,c([...W])},y=(g,u)=>{var l;return(l=s()[g])==null?void 0:l[u]},I=(g,u)=>[[0,1],[1,0],[0,-1],[-1,0],[1,1],[1,-1],[-1,1],[-1,-1]].map(([W,A])=>y(g+W,u+A)).filter(Boolean),D=(g,u)=>{const l=y(g,u);return l!==void 0&&l.traversable()};if(e.length>0)t(e.length),m(e[0].length),c(e);else throw new Error("Tile map must have at least one tile");return{horizontalCells:()=>o(),verticalCells:()=>n(),tiles:()=>s(),entryPoints:()=>i(),isValidMove:D,addEntryPoint:d,removeEntryPoint:p,updateTile:v,getTile:y,getNeighbors:I}},we=e=>{const{terrain:o,discovered:t=!1,position:n}=e,[m]=r(o),[s,c]=r(t),[i,h]=r(!0),[d,p]=r(!1),[v,y]=r(!1),[I,D]=r(!1),[g,u]=r([]),[l,W]=r(!1),A=()=>!["water","mountain","sinkhole","forest","void"].includes(o),b=()=>{c(!0)},k=()=>{Math.random()<.3&&p(!0)},C=()=>{Math.random()<.3&&y(!0)},M=()=>{Math.random()<.05&&D(!0)};return(o==="wasteland"||o==="grass")&&k(),o==="void"&&(C(),M()),{type:()=>m(),position:()=>n,discovered:()=>s(),handleTileDiscovered:b,traversable:A,visible:()=>i(),setVisible:w=>{h(w)},hasGrass:()=>d(),hasMud:()=>v(),hasEyes:()=>I(),neighbours:g,setNeighbours:w=>{u(w)},isSelected:l,setIsSelected:W,data:()=>({terrain:m(),position:n,discovered:s()})}},Ie=e=>{const[o,t]=r((e==null?void 0:e.isEnabled)??!0),[n,m]=r((e==null?void 0:e.lightRadius)??224),[s,c]=r((e==null?void 0:e.fogOfWarPoints)??[]),[i,h]=r((e==null?void 0:e.revealedPoints)??[]);return{isEnabled:()=>o(),enable:d=>t(d),lightRadius:()=>n(),setLightRadius:d=>m(d),fogOfWarPoints:()=>s(),revealedPoints:()=>i(),addRevealedPoint:d=>{const p=i();p.some(v=>v[0]===d[0]&&v[1]===d[1])||h([...p,d])},setFogOfWarPoints:d=>c(d),setRevealedPoints:d=>h(d),setToLowLight:()=>{m(128),t(!0)},setToFullLight:()=>{m(224),t(!0)},data:()=>({isEnabled:o(),lightRadius:n(),fogOfWarPoints:s(),revealedPoints:i()})}},De=e=>{const o=ue(e),[t]=r(e.spawnling),[n,m]=r(e.lastTurnSpawned??0);return{...o,spawnling:()=>t(),lastTurnSpawned:()=>n(),setLastTurnSpawned:s=>{m(s)},data:()=>({...o.data(),spawnling:()=>{var s;return(s=t())==null?void 0:s.data()},lastTurnSpawned:()=>n()})}},Ae=e=>{const o=X(e),[t]=r(e.spawnling),[n,m]=r(e.lastTurnSpawned??0);return{...o,spawnling:()=>t(),lastTurnSpawned:()=>n(),setLastTurnSpawned:s=>{m(s)},data:()=>({...o.data(),spawnling:()=>{var c;return(c=t())==null?void 0:c.data()},lastTurnSpawned:()=>n()})}};export{B as A,De as a,fe as b,be as c,we as d,Ie as e,We as f,S as g,he as h,ye as i,X as j,Ae as k,ue as l,pe as m,F as n};
